
climate:
  - platform: generic_thermostat
    name: Octoprint Tool Thermostat
    heater: switch.octoprint_fakeheater_tool
    target_sensor: sensor.octoprint_actual_tool0_temp
    min_temp: 20
    max_temp: 250
    ac_mode: false
#    target_temp: 30
    cold_tolerance: 5
    hot_tolerance: 5
    min_cycle_duration:
      minutes: 1
    precision: 0.1

  - platform: generic_thermostat
    name: Octoprint Bed Thermostat
    heater: switch.octoprint_fakeheater_bed
    target_sensor: sensor.octoprint_actual_bed_temp
    min_temp: 20
    max_temp: 70
    ac_mode: false
#    target_temp: 30
    cold_tolerance: 5
    hot_tolerance: 5
    min_cycle_duration:
      minutes: 1
    precision: 0.1

switch:
  - platform: template
    switches:
      octoprint_fakeheater_tool:
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.octoprint_fakeheater_tool
        turn_off:
          service: switch.turn_off
          target:
            entity_id: switch.octoprint_fakeheater_tool
      octoprint_fakeheater_bed:
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.octoprint_fakeheater_bed
        turn_off:
          service: switch.turn_off
          target:
            entity_id: switch.octoprint_fakeheater_bed
      octoprint_tool_cooled:
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.octoprint_tool_cooled
        turn_off:
          service: switch.turn_off
          target:
            entity_id: switch.octoprint_tool_cooled
      octoprint_bed_cooled:
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.octoprint_bed_cooled
        turn_off:
          service: switch.turn_off
          target:
            entity_id: switch.octoprint_bed_cooled

###### AUTOMATIONS --------------------------------------
automation:
- alias: Octoprint Follow Temp Tool
  trigger:
  - platform: state
    entity_id: sensor.octoprint_target_tool0_temp
  action:
  - service: climate.set_temperature
    entity_id: climate.octoprint_tool_thermostat
    data_template:
      temperature: "{{ states('sensor.octoprint_target_tool0_temp') | float }}"

- alias: Octoprint Follow Temp Bed
  trigger:
  - platform: state
    entity_id: sensor.octoprint_target_bed_temp
  action:
  - service: climate.set_temperature
    entity_id: climate.octoprint_bed_thermostat
    data_template:
      temperature: "{{ states('sensor.octoprint_target_bed_temp') | float }}"

sensor:
  - platform: template
    sensors:
      octoprint_current_state_rename:
        value_template: >-
          {% if is_state('sensor.octoprint_current_state', 'unavailable') %}
            Disconnected
          {% elif is_state('sensor.octoprint_current_state', 'Printing') %}
            Printing
          {% elif is_state('sensor.octoprint_current_state', 'Operational') %}
            Idle
          {% elif is_state('sensor.octoprint_current_state', 'Starting') %}
            Starting
          {% else %}
            Unknown
          {% endif %}
      octoprint_printer_power_energy_use_today_convert:
        unit_of_measurement: 'Wh'
        value_template: "{{ states('sensor.octoprint_printer_power_energy_use_today') | float * 1000 }}"
      octoprint_time_printing:
        value_template: >
          {% set time = ((states('sensor.octoprint_time_start')|as_datetime|as_local - now()).seconds) |int %}
          {% set minutes = ((-time % 3600) / 60) | int %}
          {% set hours = ((-time % 86400) / 3600) | int %}
          {% set days = (-time / 86400) | int %}

          {%- if time < 60 -%}
            < 1 min
            {%- else -%}
            {%- if hours > 0 -%}
              {%- if days > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ hours }}h
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if hours > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ minutes }}m
            {%- endif -%}
          {%- endif -%}
      octoprint_time_remaining_estimated:
        value_template: >
          {% set time = ((states('sensor.octoprint_time_finish_estimated')|as_datetime|as_local - now()).seconds) |int %}
          {% set minutes = ((time % 3600) / 60) | int %}
          {% set hours = ((time % 86400) / 3600) | int %}
          {% set days = (time / 86400) | int %}

          {%- if time < 60 -%}
            < 1 min
            {%- else -%}
            {%- if hours > 0 -%}
              {%- if days > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ hours }}h
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if hours > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ minutes }}m
            {%- endif -%}
          {%- endif -%}
